<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.dao.CommentDao" >
  <resultMap id="BaseResultMap" type="com.blog.domain.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.blog.domain.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, date, name, email
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>

  <select id="queryAll" resultMap="ResultMapWithBLOBs"  >
    select *
    from comment
    where article_id = #{article_id}
    ORDER BY id DESC
    LIMIT #{offset}, #{limit}
  </select>

  <select id="countAllNum" resultType="java.lang.Integer">
    SELECT count(*) FROM comment
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.blog.domain.Comment" >
    insert into comment (id, article_id, date, 
      name, email, content
      )
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{date,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
</mapper>