<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
       <!-- spring-context -->
       <context:component-scan base-package="com.blog" />
           
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="login"/>
        <property name="unauthorizedUrl" value="403.html"/>
        <property name="filterChainDefinitions">
            <value>
            /freemarker=roles["admin"]
            /main=roles["admin"]
            /article_add=roles["admin"]
            /article_add/do=roles["admin"]
            /article_list=roles["admin"]
            /comment=roles["admin"]
            /comment/delete=roles["admin"]
            /detail=roles["admin"]
            /edit=roles["admin"]
            /edit/do=roles["admin"]
            /search=roles["admin"]
            /article_del=roles["admin"]
                <!-- /login.html = anon
                /subLogin = anon
                /testRole2 = roles["admin"]
                /testRole3 = roles["admin", "admin1"]
                /testRole3 = rolesOr["admin", "admin1"]
                /testPerms = perms["admin:update"]
                /testPerms1 = perms["admin:update", "admin:add"]
                /* = authc -->
            </value>
        </property>
        <!--配置filter-->
        <property name="filters">
            <util:map>
                <entry key="rolesOr" value-ref="rolesOrFilter" />
            </util:map>
        </property>
    </bean>

    <bean class="com.blog.shiro.filter.RolesOrFilter" id="rolesOrFilter"/>

    <!--创建SecurityManager-->
    <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
        <!--注入realm-->
        <property name="realm" ref="realm"/>
        <!--注入sessionManager-->
        <property name="sessionManager" ref="redisSessionManager" />
        <!--注入cacheManager-->
        <!-- <property name="cacheManager" ref="redisCacheManager"/> -->
        <!--注入cookieRememberManager-->
        <property name="rememberMeManager" ref="cookieRememberMeManager" />
    </bean>

    <bean class="com.blog.shiro.realm.CustomRealm" id="realm">
       <!--  <property name="credentialsMatcher" ref="credentialsMatcher"/> -->
    </bean>

    <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher" id="credentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="1" />
    </bean>

    <bean class="com.blog.shiro.session.CustomSessionManager" id="redisSessionManager">
       <!--  <property name="sessionDAO" ref="redisSessionDao"/> -->
    </bean>

  <!--   <bean class="com.nevercome.shiroweb.session.RedisSessionDao" id="redisSessionDao"/> -->

   <!--  <bean class="com.nevercome.shiroweb.cache.RedisCacheManager" id="redisCacheManager"/> -->
    
    <bean class="org.apache.shiro.web.mgt.CookieRememberMeManager" id="cookieRememberMeManager">
        <property name="cookie" ref="cookie"/>
    </bean>

    <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="cookie">
        <constructor-arg value="rememberMe" />
        <property name="maxAge" value="60000" />
    </bean>
    <!--spring-mvc -->


    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor">
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" id="authorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
</beans>